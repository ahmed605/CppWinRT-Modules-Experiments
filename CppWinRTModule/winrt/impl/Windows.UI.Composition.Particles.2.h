// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Composition_Particles_2_H
#define WINRT_Windows_UI_Composition_Particles_2_H
#include "winrt/impl/Windows.Foundation.2.h"
#include "winrt/impl/Windows.Foundation.Collections.2.h"
#include "winrt/impl/Windows.Foundation.Numerics.2.h"
#include "winrt/impl/Windows.UI.Composition.2.h"
#include "winrt/impl/Windows.UI.Composition.Particles.1.h"
WINRT_EXPORT namespace winrt::Windows::UI::Composition::Particles
{
    struct ParticleColorBinding
    {
        winrt::Windows::UI::Composition::Particles::ParticleReferenceFrame BindingType;
        winrt::Windows::Foundation::Numerics::float3 Output;
    };
    inline bool operator==(ParticleColorBinding const& left, ParticleColorBinding const& right) noexcept
    {
        return left.BindingType == right.BindingType && left.Output == right.Output;
    }
    inline bool operator!=(ParticleColorBinding const& left, ParticleColorBinding const& right) noexcept
    {
        return !(left == right);
    }
    struct ParticleScalarBinding
    {
        winrt::Windows::UI::Composition::Particles::ParticleReferenceFrame BindingType;
        float Output;
    };
    inline bool operator==(ParticleScalarBinding const& left, ParticleScalarBinding const& right) noexcept
    {
        return left.BindingType == right.BindingType && left.Output == right.Output;
    }
    inline bool operator!=(ParticleScalarBinding const& left, ParticleScalarBinding const& right) noexcept
    {
        return !(left == right);
    }
    struct ParticleVector2Binding
    {
        winrt::Windows::UI::Composition::Particles::ParticleReferenceFrame BindingType;
        winrt::Windows::Foundation::Numerics::float2 Output;
    };
    inline bool operator==(ParticleVector2Binding const& left, ParticleVector2Binding const& right) noexcept
    {
        return left.BindingType == right.BindingType && left.Output == right.Output;
    }
    inline bool operator!=(ParticleVector2Binding const& left, ParticleVector2Binding const& right) noexcept
    {
        return !(left == right);
    }
    struct ParticleVector3Binding
    {
        winrt::Windows::UI::Composition::Particles::ParticleReferenceFrame BindingType;
        winrt::Windows::Foundation::Numerics::float3 Output;
    };
    inline bool operator==(ParticleVector3Binding const& left, ParticleVector3Binding const& right) noexcept
    {
        return left.BindingType == right.BindingType && left.Output == right.Output;
    }
    inline bool operator!=(ParticleVector3Binding const& left, ParticleVector3Binding const& right) noexcept
    {
        return !(left == right);
    }
    struct ParticleVector4Binding
    {
        winrt::Windows::UI::Composition::Particles::ParticleReferenceFrame BindingType;
        winrt::Windows::Foundation::Numerics::float4 Output;
    };
    inline bool operator==(ParticleVector4Binding const& left, ParticleVector4Binding const& right) noexcept
    {
        return left.BindingType == right.BindingType && left.Output == right.Output;
    }
    inline bool operator!=(ParticleVector4Binding const& left, ParticleVector4Binding const& right) noexcept
    {
        return !(left == right);
    }
    struct __declspec(empty_bases) ParticleAttractor : winrt::Windows::UI::Composition::Particles::IParticleAttractor,
        impl::base<ParticleAttractor, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleAttractor, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleAttractor(std::nullptr_t) noexcept {}
        ParticleAttractor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Composition::Particles::IParticleAttractor(ptr, take_ownership_from_abi) {}
        ParticleAttractor(ParticleAttractor const&) noexcept = default;
        ParticleAttractor(ParticleAttractor&&) noexcept = default;
        ParticleAttractor& operator=(ParticleAttractor const&) & noexcept = default;
        ParticleAttractor& operator=(ParticleAttractor&&) & noexcept = default;
        static auto Create(winrt::Windows::UI::Composition::Compositor const& compositor);
    };
    struct __declspec(empty_bases) ParticleAttractorCollection : winrt::Windows::Foundation::Collections::IVector<winrt::Windows::UI::Composition::Particles::ParticleAttractor>,
        impl::base<ParticleAttractorCollection, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleAttractorCollection, winrt::Windows::UI::Composition::Particles::IParticleAttractorCollection, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleAttractorCollection(std::nullptr_t) noexcept {}
        ParticleAttractorCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::Collections::IVector<winrt::Windows::UI::Composition::Particles::ParticleAttractor>(ptr, take_ownership_from_abi) {}
        ParticleAttractorCollection(ParticleAttractorCollection const&) noexcept = default;
        ParticleAttractorCollection(ParticleAttractorCollection&&) noexcept = default;
        ParticleAttractorCollection& operator=(ParticleAttractorCollection const&) & noexcept = default;
        ParticleAttractorCollection& operator=(ParticleAttractorCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ParticleBaseBehavior : winrt::Windows::UI::Composition::Particles::IParticleBaseBehavior,
        impl::base<ParticleBaseBehavior, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleBaseBehavior, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleBaseBehavior(std::nullptr_t) noexcept {}
        ParticleBaseBehavior(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Composition::Particles::IParticleBaseBehavior(ptr, take_ownership_from_abi) {}
        ParticleBaseBehavior(ParticleBaseBehavior const&) noexcept = default;
        ParticleBaseBehavior(ParticleBaseBehavior&&) noexcept = default;
        ParticleBaseBehavior& operator=(ParticleBaseBehavior const&) & noexcept = default;
        ParticleBaseBehavior& operator=(ParticleBaseBehavior&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ParticleBehaviors : winrt::Windows::UI::Composition::Particles::IParticleBehaviors,
        impl::base<ParticleBehaviors, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleBehaviors, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleBehaviors(std::nullptr_t) noexcept {}
        ParticleBehaviors(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Composition::Particles::IParticleBehaviors(ptr, take_ownership_from_abi) {}
        ParticleBehaviors(ParticleBehaviors const&) noexcept = default;
        ParticleBehaviors(ParticleBehaviors&&) noexcept = default;
        ParticleBehaviors& operator=(ParticleBehaviors const&) & noexcept = default;
        ParticleBehaviors& operator=(ParticleBehaviors&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ParticleColorBehavior : winrt::Windows::UI::Composition::Particles::IParticleColorBehavior,
        impl::base<ParticleColorBehavior, winrt::Windows::UI::Composition::Particles::ParticleBaseBehavior, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleColorBehavior, winrt::Windows::UI::Composition::Particles::IParticleBaseBehavior, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleColorBehavior(std::nullptr_t) noexcept {}
        ParticleColorBehavior(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Composition::Particles::IParticleColorBehavior(ptr, take_ownership_from_abi) {}
        ParticleColorBehavior(ParticleColorBehavior const&) noexcept = default;
        ParticleColorBehavior(ParticleColorBehavior&&) noexcept = default;
        ParticleColorBehavior& operator=(ParticleColorBehavior const&) & noexcept = default;
        ParticleColorBehavior& operator=(ParticleColorBehavior&&) & noexcept = default;
        static auto Create(winrt::Windows::UI::Composition::Compositor const& compositor);
    };
    struct __declspec(empty_bases) ParticleColorBindingCollection : winrt::Windows::UI::Composition::Particles::IParticleColorBindingCollection,
        impl::base<ParticleColorBindingCollection, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleColorBindingCollection, winrt::Windows::Foundation::Collections::IIterable<winrt::Windows::Foundation::Collections::IKeyValuePair<float, winrt::Windows::UI::Composition::Particles::ParticleColorBinding>>, winrt::Windows::Foundation::Collections::IMap<float, winrt::Windows::UI::Composition::Particles::ParticleColorBinding>, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleColorBindingCollection(std::nullptr_t) noexcept {}
        ParticleColorBindingCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Composition::Particles::IParticleColorBindingCollection(ptr, take_ownership_from_abi) {}
        ParticleColorBindingCollection(ParticleColorBindingCollection const&) noexcept = default;
        ParticleColorBindingCollection(ParticleColorBindingCollection&&) noexcept = default;
        ParticleColorBindingCollection& operator=(ParticleColorBindingCollection const&) & noexcept = default;
        ParticleColorBindingCollection& operator=(ParticleColorBindingCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ParticleEmitterVisual : winrt::Windows::UI::Composition::Particles::IParticleEmitterVisual,
        impl::base<ParticleEmitterVisual, winrt::Windows::UI::Composition::ContainerVisual, winrt::Windows::UI::Composition::Visual, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleEmitterVisual, winrt::Windows::UI::Composition::IContainerVisual, winrt::Windows::UI::Composition::IVisual, winrt::Windows::UI::Composition::IVisual2, winrt::Windows::UI::Composition::IVisual3, winrt::Windows::UI::Composition::IVisual4, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleEmitterVisual(std::nullptr_t) noexcept {}
        ParticleEmitterVisual(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Composition::Particles::IParticleEmitterVisual(ptr, take_ownership_from_abi) {}
        ParticleEmitterVisual(ParticleEmitterVisual const&) noexcept = default;
        ParticleEmitterVisual(ParticleEmitterVisual&&) noexcept = default;
        ParticleEmitterVisual& operator=(ParticleEmitterVisual const&) & noexcept = default;
        ParticleEmitterVisual& operator=(ParticleEmitterVisual&&) & noexcept = default;
        static auto Create(winrt::Windows::UI::Composition::Compositor const& compositor);
    };
    struct __declspec(empty_bases) ParticleGenerator : winrt::Windows::UI::Composition::Particles::IParticleGenerator,
        impl::base<ParticleGenerator, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleGenerator, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleGenerator(std::nullptr_t) noexcept {}
        ParticleGenerator(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Composition::Particles::IParticleGenerator(ptr, take_ownership_from_abi) {}
        ParticleGenerator(ParticleGenerator const&) noexcept = default;
        ParticleGenerator(ParticleGenerator&&) noexcept = default;
        ParticleGenerator& operator=(ParticleGenerator const&) & noexcept = default;
        ParticleGenerator& operator=(ParticleGenerator&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ParticleScalarBehavior : winrt::Windows::UI::Composition::Particles::IParticleScalarBehavior,
        impl::base<ParticleScalarBehavior, winrt::Windows::UI::Composition::Particles::ParticleBaseBehavior, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleScalarBehavior, winrt::Windows::UI::Composition::Particles::IParticleBaseBehavior, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleScalarBehavior(std::nullptr_t) noexcept {}
        ParticleScalarBehavior(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Composition::Particles::IParticleScalarBehavior(ptr, take_ownership_from_abi) {}
        ParticleScalarBehavior(ParticleScalarBehavior const&) noexcept = default;
        ParticleScalarBehavior(ParticleScalarBehavior&&) noexcept = default;
        ParticleScalarBehavior& operator=(ParticleScalarBehavior const&) & noexcept = default;
        ParticleScalarBehavior& operator=(ParticleScalarBehavior&&) & noexcept = default;
        static auto Create(winrt::Windows::UI::Composition::Compositor const& compositor);
    };
    struct __declspec(empty_bases) ParticleScalarBindingCollection : winrt::Windows::UI::Composition::Particles::IParticleScalarBindingCollection,
        impl::base<ParticleScalarBindingCollection, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleScalarBindingCollection, winrt::Windows::Foundation::Collections::IIterable<winrt::Windows::Foundation::Collections::IKeyValuePair<float, winrt::Windows::UI::Composition::Particles::ParticleScalarBinding>>, winrt::Windows::Foundation::Collections::IMap<float, winrt::Windows::UI::Composition::Particles::ParticleScalarBinding>, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleScalarBindingCollection(std::nullptr_t) noexcept {}
        ParticleScalarBindingCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Composition::Particles::IParticleScalarBindingCollection(ptr, take_ownership_from_abi) {}
        ParticleScalarBindingCollection(ParticleScalarBindingCollection const&) noexcept = default;
        ParticleScalarBindingCollection(ParticleScalarBindingCollection&&) noexcept = default;
        ParticleScalarBindingCollection& operator=(ParticleScalarBindingCollection const&) & noexcept = default;
        ParticleScalarBindingCollection& operator=(ParticleScalarBindingCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ParticleVector2Behavior : winrt::Windows::UI::Composition::Particles::IParticleVector2Behavior,
        impl::base<ParticleVector2Behavior, winrt::Windows::UI::Composition::Particles::ParticleBaseBehavior, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleVector2Behavior, winrt::Windows::UI::Composition::Particles::IParticleBaseBehavior, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleVector2Behavior(std::nullptr_t) noexcept {}
        ParticleVector2Behavior(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Composition::Particles::IParticleVector2Behavior(ptr, take_ownership_from_abi) {}
        ParticleVector2Behavior(ParticleVector2Behavior const&) noexcept = default;
        ParticleVector2Behavior(ParticleVector2Behavior&&) noexcept = default;
        ParticleVector2Behavior& operator=(ParticleVector2Behavior const&) & noexcept = default;
        ParticleVector2Behavior& operator=(ParticleVector2Behavior&&) & noexcept = default;
        static auto Create(winrt::Windows::UI::Composition::Compositor const& compositor);
    };
    struct __declspec(empty_bases) ParticleVector2BindingCollection : winrt::Windows::UI::Composition::Particles::IParticleVector2BindingCollection,
        impl::base<ParticleVector2BindingCollection, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleVector2BindingCollection, winrt::Windows::Foundation::Collections::IIterable<winrt::Windows::Foundation::Collections::IKeyValuePair<float, winrt::Windows::UI::Composition::Particles::ParticleVector2Binding>>, winrt::Windows::Foundation::Collections::IMap<float, winrt::Windows::UI::Composition::Particles::ParticleVector2Binding>, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleVector2BindingCollection(std::nullptr_t) noexcept {}
        ParticleVector2BindingCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Composition::Particles::IParticleVector2BindingCollection(ptr, take_ownership_from_abi) {}
        ParticleVector2BindingCollection(ParticleVector2BindingCollection const&) noexcept = default;
        ParticleVector2BindingCollection(ParticleVector2BindingCollection&&) noexcept = default;
        ParticleVector2BindingCollection& operator=(ParticleVector2BindingCollection const&) & noexcept = default;
        ParticleVector2BindingCollection& operator=(ParticleVector2BindingCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ParticleVector3Behavior : winrt::Windows::UI::Composition::Particles::IParticleVector3Behavior,
        impl::base<ParticleVector3Behavior, winrt::Windows::UI::Composition::Particles::ParticleBaseBehavior, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleVector3Behavior, winrt::Windows::UI::Composition::Particles::IParticleBaseBehavior, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleVector3Behavior(std::nullptr_t) noexcept {}
        ParticleVector3Behavior(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Composition::Particles::IParticleVector3Behavior(ptr, take_ownership_from_abi) {}
        ParticleVector3Behavior(ParticleVector3Behavior const&) noexcept = default;
        ParticleVector3Behavior(ParticleVector3Behavior&&) noexcept = default;
        ParticleVector3Behavior& operator=(ParticleVector3Behavior const&) & noexcept = default;
        ParticleVector3Behavior& operator=(ParticleVector3Behavior&&) & noexcept = default;
        static auto Create(winrt::Windows::UI::Composition::Compositor const& compositor);
    };
    struct __declspec(empty_bases) ParticleVector3BindingCollection : winrt::Windows::UI::Composition::Particles::IParticleVector3BindingCollection,
        impl::base<ParticleVector3BindingCollection, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleVector3BindingCollection, winrt::Windows::Foundation::Collections::IIterable<winrt::Windows::Foundation::Collections::IKeyValuePair<float, winrt::Windows::UI::Composition::Particles::ParticleVector3Binding>>, winrt::Windows::Foundation::Collections::IMap<float, winrt::Windows::UI::Composition::Particles::ParticleVector3Binding>, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleVector3BindingCollection(std::nullptr_t) noexcept {}
        ParticleVector3BindingCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Composition::Particles::IParticleVector3BindingCollection(ptr, take_ownership_from_abi) {}
        ParticleVector3BindingCollection(ParticleVector3BindingCollection const&) noexcept = default;
        ParticleVector3BindingCollection(ParticleVector3BindingCollection&&) noexcept = default;
        ParticleVector3BindingCollection& operator=(ParticleVector3BindingCollection const&) & noexcept = default;
        ParticleVector3BindingCollection& operator=(ParticleVector3BindingCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ParticleVector4Behavior : winrt::Windows::UI::Composition::Particles::IParticleVector4Behavior,
        impl::base<ParticleVector4Behavior, winrt::Windows::UI::Composition::Particles::ParticleBaseBehavior, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleVector4Behavior, winrt::Windows::UI::Composition::Particles::IParticleBaseBehavior, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleVector4Behavior(std::nullptr_t) noexcept {}
        ParticleVector4Behavior(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Composition::Particles::IParticleVector4Behavior(ptr, take_ownership_from_abi) {}
        ParticleVector4Behavior(ParticleVector4Behavior const&) noexcept = default;
        ParticleVector4Behavior(ParticleVector4Behavior&&) noexcept = default;
        ParticleVector4Behavior& operator=(ParticleVector4Behavior const&) & noexcept = default;
        ParticleVector4Behavior& operator=(ParticleVector4Behavior&&) & noexcept = default;
        static auto Create(winrt::Windows::UI::Composition::Compositor const& compositor);
    };
    struct __declspec(empty_bases) ParticleVector4BindingCollection : winrt::Windows::UI::Composition::Particles::IParticleVector4BindingCollection,
        impl::base<ParticleVector4BindingCollection, winrt::Windows::UI::Composition::CompositionObject>,
        impl::require<ParticleVector4BindingCollection, winrt::Windows::Foundation::Collections::IIterable<winrt::Windows::Foundation::Collections::IKeyValuePair<float, winrt::Windows::UI::Composition::Particles::ParticleVector4Binding>>, winrt::Windows::Foundation::Collections::IMap<float, winrt::Windows::UI::Composition::Particles::ParticleVector4Binding>, winrt::Windows::UI::Composition::ICompositionObject, winrt::Windows::UI::Composition::ICompositionObject2, winrt::Windows::UI::Composition::ICompositionObject3, winrt::Windows::UI::Composition::ICompositionObject4, winrt::Windows::Foundation::IClosable, winrt::Windows::UI::Composition::IAnimationObject>
    {
        ParticleVector4BindingCollection(std::nullptr_t) noexcept {}
        ParticleVector4BindingCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Composition::Particles::IParticleVector4BindingCollection(ptr, take_ownership_from_abi) {}
        ParticleVector4BindingCollection(ParticleVector4BindingCollection const&) noexcept = default;
        ParticleVector4BindingCollection(ParticleVector4BindingCollection&&) noexcept = default;
        ParticleVector4BindingCollection& operator=(ParticleVector4BindingCollection const&) & noexcept = default;
        ParticleVector4BindingCollection& operator=(ParticleVector4BindingCollection&&) & noexcept = default;
    };
}
#endif
