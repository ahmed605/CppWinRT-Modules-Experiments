// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_UIAutomation_2_H
#define WINRT_Windows_UI_UIAutomation_2_H
#include "winrt/impl/Windows.UI.UIAutomation.1.h"
WINRT_EXPORT namespace winrt::Windows::UI::UIAutomation
{
    struct __declspec(empty_bases) AutomationConnection : winrt::Windows::UI::UIAutomation::IAutomationConnection
    {
        AutomationConnection(std::nullptr_t) noexcept {}
        AutomationConnection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::UIAutomation::IAutomationConnection(ptr, take_ownership_from_abi) {}
        AutomationConnection(AutomationConnection const&) noexcept = default;
        AutomationConnection(AutomationConnection&&) noexcept = default;
        AutomationConnection& operator=(AutomationConnection const&) & noexcept = default;
        AutomationConnection& operator=(AutomationConnection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AutomationConnectionBoundObject : winrt::Windows::UI::UIAutomation::IAutomationConnectionBoundObject
    {
        AutomationConnectionBoundObject(std::nullptr_t) noexcept {}
        AutomationConnectionBoundObject(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::UIAutomation::IAutomationConnectionBoundObject(ptr, take_ownership_from_abi) {}
        AutomationConnectionBoundObject(AutomationConnectionBoundObject const&) noexcept = default;
        AutomationConnectionBoundObject(AutomationConnectionBoundObject&&) noexcept = default;
        AutomationConnectionBoundObject& operator=(AutomationConnectionBoundObject const&) & noexcept = default;
        AutomationConnectionBoundObject& operator=(AutomationConnectionBoundObject&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AutomationElement : winrt::Windows::UI::UIAutomation::IAutomationElement
    {
        AutomationElement(std::nullptr_t) noexcept {}
        AutomationElement(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::UIAutomation::IAutomationElement(ptr, take_ownership_from_abi) {}
        AutomationElement(AutomationElement const&) noexcept = default;
        AutomationElement(AutomationElement&&) noexcept = default;
        AutomationElement& operator=(AutomationElement const&) & noexcept = default;
        AutomationElement& operator=(AutomationElement&&) & noexcept = default;
    };
    struct __declspec(empty_bases) AutomationTextRange : winrt::Windows::UI::UIAutomation::IAutomationTextRange
    {
        AutomationTextRange(std::nullptr_t) noexcept {}
        AutomationTextRange(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::UIAutomation::IAutomationTextRange(ptr, take_ownership_from_abi) {}
        AutomationTextRange(AutomationTextRange const&) noexcept = default;
        AutomationTextRange(AutomationTextRange&&) noexcept = default;
        AutomationTextRange& operator=(AutomationTextRange const&) & noexcept = default;
        AutomationTextRange& operator=(AutomationTextRange&&) & noexcept = default;
    };
}
#endif
