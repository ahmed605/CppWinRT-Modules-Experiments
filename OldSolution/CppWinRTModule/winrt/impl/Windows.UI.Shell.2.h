// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Shell_2_H
#define WINRT_Windows_UI_Shell_2_H
#include "winrt/impl/Windows.UI.Shell.1.h"
WINRT_EXPORT namespace winrt::Windows::UI::Shell
{
    struct AdaptiveCardBuilder
    {
        AdaptiveCardBuilder() = delete;
        static auto CreateAdaptiveCardFromJson(param::hstring const& value);
    };
    struct __declspec(empty_bases) SecurityAppManager : winrt::Windows::UI::Shell::ISecurityAppManager
    {
        SecurityAppManager(std::nullptr_t) noexcept {}
        SecurityAppManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Shell::ISecurityAppManager(ptr, take_ownership_from_abi) {}
        SecurityAppManager();
        SecurityAppManager(SecurityAppManager const&) noexcept = default;
        SecurityAppManager(SecurityAppManager&&) noexcept = default;
        SecurityAppManager& operator=(SecurityAppManager const&) & noexcept = default;
        SecurityAppManager& operator=(SecurityAppManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ShareWindowCommandEventArgs : winrt::Windows::UI::Shell::IShareWindowCommandEventArgs
    {
        ShareWindowCommandEventArgs(std::nullptr_t) noexcept {}
        ShareWindowCommandEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Shell::IShareWindowCommandEventArgs(ptr, take_ownership_from_abi) {}
        ShareWindowCommandEventArgs(ShareWindowCommandEventArgs const&) noexcept = default;
        ShareWindowCommandEventArgs(ShareWindowCommandEventArgs&&) noexcept = default;
        ShareWindowCommandEventArgs& operator=(ShareWindowCommandEventArgs const&) & noexcept = default;
        ShareWindowCommandEventArgs& operator=(ShareWindowCommandEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ShareWindowCommandSource : winrt::Windows::UI::Shell::IShareWindowCommandSource
    {
        ShareWindowCommandSource(std::nullptr_t) noexcept {}
        ShareWindowCommandSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Shell::IShareWindowCommandSource(ptr, take_ownership_from_abi) {}
        ShareWindowCommandSource(ShareWindowCommandSource const&) noexcept = default;
        ShareWindowCommandSource(ShareWindowCommandSource&&) noexcept = default;
        ShareWindowCommandSource& operator=(ShareWindowCommandSource const&) & noexcept = default;
        ShareWindowCommandSource& operator=(ShareWindowCommandSource&&) & noexcept = default;
        static auto GetForCurrentView();
    };
    struct __declspec(empty_bases) TaskbarManager : winrt::Windows::UI::Shell::ITaskbarManager,
        impl::require<TaskbarManager, winrt::Windows::UI::Shell::ITaskbarManager2>
    {
        TaskbarManager(std::nullptr_t) noexcept {}
        TaskbarManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::UI::Shell::ITaskbarManager(ptr, take_ownership_from_abi) {}
        TaskbarManager(TaskbarManager const&) noexcept = default;
        TaskbarManager(TaskbarManager&&) noexcept = default;
        TaskbarManager& operator=(TaskbarManager const&) & noexcept = default;
        TaskbarManager& operator=(TaskbarManager&&) & noexcept = default;
        static auto GetDefault();
    };
}
#endif
